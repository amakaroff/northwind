// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.northwind.service.impl;

import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.northwind.model.Category;
import org.northwind.repository.CategoryRepository;
import org.northwind.service.impl.CategoryServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CategoryServiceImpl_Roo_Service_Impl {
    
    declare @type: CategoryServiceImpl: @Service;
    
    declare @type: CategoryServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CategoryRepository CategoryServiceImpl.categoryRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param categoryRepository
     */
    @Autowired
    public CategoryServiceImpl.new(CategoryRepository categoryRepository) {
        setCategoryRepository(categoryRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CategoryRepository
     */
    public CategoryRepository CategoryServiceImpl.getCategoryRepository() {
        return categoryRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoryRepository
     */
    public void CategoryServiceImpl.setCategoryRepository(CategoryRepository categoryRepository) {
        this.categoryRepository = categoryRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param category
     */
    @Transactional
    public void CategoryServiceImpl.delete(Category category) {
        getCategoryRepository().delete(category);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Category> CategoryServiceImpl.save(Iterable<Category> entities) {
        return getCategoryRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void CategoryServiceImpl.delete(Iterable<Long> ids) {
        List<Category> toDelete = getCategoryRepository().findAll(ids);
        getCategoryRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Category
     */
    @Transactional
    public Category CategoryServiceImpl.save(Category entity) {
        return getCategoryRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Category
     */
    public Category CategoryServiceImpl.findOne(Long id) {
        return getCategoryRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Category
     */
    public Category CategoryServiceImpl.findOneForUpdate(Long id) {
        return getCategoryRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Category> CategoryServiceImpl.findAll(Iterable<Long> ids) {
        return getCategoryRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Category> CategoryServiceImpl.findAll() {
        return getCategoryRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CategoryServiceImpl.count() {
        return getCategoryRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Category> CategoryServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCategoryRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Category> CategoryServiceImpl.getEntityType() {
        return Category.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CategoryServiceImpl.getIdType() {
        return Long.class;
    }
    
}
